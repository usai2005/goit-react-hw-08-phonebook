{"version":3,"file":"static/js/354.1cb2e582.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/PhoneBook/PhoneBook.module.css?da4e","pages/PhoneBook/PhoneBook.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__button\":\"ContactForm_form__button__MT1Jk\"};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      onNameExists();\n    } else {\n      dispatch(addContact({ name, number }));\n\n      stateReset();\n    }\n  };\n\n  const onNameExists = () => {\n    alert(`${name} is already in contacts list`);\n\n    setName(name);\n    setNumber(number);\n  };\n\n  const stateReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label htmlFor=\"form-name\">Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={handleChange}\n        id=\"form-name\"\n        required\n      />\n\n      <label htmlFor=\"form-number\">Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        onChange={handleChange}\n        id=\"form-number\"\n        required\n      />\n\n      <button className={css.form__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__label\":\"Filter_filter__label__ttfPR\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { filterChanged } from '../../redux/filter/filterSlice';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterChangeHandler = e => {\n    const filterValue = e.currentTarget.value;\n    dispatch(filterChanged(filterValue));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.filter__label} htmlFor=\"filter\">\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        id=\"filter\"\n        value={filter}\n        onChange={filterChangeHandler}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"item__button\":\"ContactListItem_item__button__0acjG\"};","import PropTypes from 'prop-types';\nimport css from './ContactListItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\n\nconst ContactListItem = ({ transferRenderListItem: { id, name, number } }) => {\n  const dispatch = useDispatch();\n  return (\n    <li>\n      <div>\n        <p>\n          {name}:<span>{number}</span>\n        </p>\n        <button\n          className={css.item__button}\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  transferRenderListItem: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ContactListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\"};","import ContactListItem from '../ContactListItem/ContactListItem';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filterValue = useSelector(selectFilter);\n\n  const getFoundContacts = () => {\n    const filterToLowerCase = filterValue.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase)\n    );\n  };\n\n  const renderList = getFoundContacts();\n\n  return (\n    <ul className={css.contact__list}>\n      {renderList.map(renderListItem => (\n        <ContactListItem\n          key={renderListItem.id}\n          transferRenderListItem={renderListItem}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook__section\":\"PhoneBook_phonebook__section__MbW-V\",\"phonebook__title\":\"PhoneBook_phonebook__title__UnrBS\",\"contacts__title\":\"PhoneBook_contacts__title__lCzkl\"};","import ContactForm from '../../components/ContactForm/ContactForm';\nimport Filter from '../../components/Filter/Filter';\nimport ContactList from '../../components/ContactList/ContactList';\nimport css from './PhoneBook.module.css';\n\nconst PhoneBook = () => {\n  return (\n    <div className={css.phonebook__section}>\n      <h1 className={css.phonebook__title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={css.contacts__title}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default PhoneBook;\n"],"names":["_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","e","_e$target","target","value","onNameExists","alert","concat","stateReset","_jsxs","className","css","onSubmit","preventDefault","find","contact","addContact","children","_jsx","htmlFor","type","pattern","title","onChange","id","required","filter","selectFilter","filterValue","currentTarget","filterChanged","_ref","_ref$transferRenderLi","transferRenderListItem","onClick","deleteContact","renderList","filterToLowerCase","toLowerCase","includes","getFoundContacts","map","renderListItem","ContactListItem","ContactForm","Filter","ContactList"],"sourceRoot":""}